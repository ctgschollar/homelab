version: "3.8"

networks:
  traefik-net:
    external: true

volumes:
  clipcascade_data:
    driver: local
    # If you want to bind to CephFS or another shared storage, swap to:
    # driver_opts:
    #   type: none
    #   device: /mnt/pve/cephfs/apps/clipcascade
    #   o: bind

services:
  clipcascade:
    image: sathvikrao/clipcascade:latest
    networks:
      - traefik-net
    volumes:
      - clipcascade_data:/database   # persistent user DB
    environment:
      - CC_MAX_MESSAGE_SIZE_IN_MiB=1
      - CC_P2P_ENABLED=false
      - CC_ALLOWED_ORIGINS=https://clip.schollar.dev
      - CC_SIGNUP_ENABLED=false
      # Optional websocket limits (3.1.0+):
      # - CC_MAX_WS_GLOBAL_CONNECTIONS=1000
      # - CC_MAX_WS_CONNECTIONS_PER_USER=10
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        preferences:
          - spread: node.id
      labels:
        - traefik.enable=true
        - traefik.docker.lbswarm=true
        - traefik.http.routers.clipcascade.rule=Host(`clip.schollar.dev`)
        - traefik.http.routers.clipcascade.entrypoints=websecure
        - traefik.http.routers.clipcascade.tls=true
        - traefik.http.routers.clipcascade.tls.certresolver=cf
        - traefik.http.services.clipcascade.loadbalancer.server.port=8080
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3

