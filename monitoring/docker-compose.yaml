version: "3.8"

networks:
  traefik-net:
    external: true

volumes:
  prometheus-data:
  grafana-data:
  grafana-dashboards:   # drop Ceph dashboard JSONs here at runtime (optional)

configs:
  prometheus.yml:
    file: ./prometheus.yml
  grafana-datasource-prometheus.yml:
    file: ./provisioning/datasources/prometheus.yml
  grafana-dashboards-provider.yml:
    file: ./provisioning/dashboards/provider.yml

secrets:
  grafana-admin-password:
    file: ./secrets/grafana-admin-password.txt

services:
  prometheus:
    image: prom/prometheus:v2.54.1
    user: "0:0"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.retention.time=15d"
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
    volumes:
      - prometheus-data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [traefik-net]
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        order: start-first
        parallelism: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: traefik-net
        traefik.http.routers.prometheus.rule: Host(`prometheus.schollar.dev`)
        traefik.http.routers.prometheus.entrypoints: websecure
        traefik.http.routers.prometheus.tls.certresolver: cf
        traefik.http.services.prometheus.loadbalancer.server.port: "9090"
        # Metrics
        prometheus.blackbox: "true"
        metrics.probe_url: "https://prometheus.schollar.dev"

  grafana:
    image: grafana/grafana:10.4.5
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana-admin-password
      GF_SERVER_ROOT_URL: https://grafana.schollar.dev
      GF_USERS_DEFAULT_THEME: dark
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    secrets:
      - grafana-admin-password
    configs:
      - source: grafana-datasource-prometheus.yml
        target: /etc/grafana/provisioning/datasources/prometheus.yml
      - source: grafana-dashboards-provider.yml
        target: /etc/grafana/provisioning/dashboards/provider.yml
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-dashboards:/var/lib/grafana/dashboards
    networks: [traefik-net]
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.metrics == true
      update_config:
        order: start-first
        parallelism: 1
      labels:
        traefik.enable: "true"
        traefik.docker.network: traefik-net
        traefik.http.routers.grafana.rule: Host(`grafana.schollar.dev`)
        traefik.http.routers.grafana.entrypoints: websecure
        traefik.http.routers.grafana.tls.certresolver: cf
        traefik.http.services.grafana.loadbalancer.server.port: "3000"

